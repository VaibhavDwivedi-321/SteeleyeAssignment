Question 1: Explain what the simple List Component does?
Answer:
The List component is used to display the items array's list of elements.
Here the WrappedListComponent produces a component list and accepts an array of strings(text) as props.
It traverses the array for each item and shows its content on the screen with a background color(red when unselected and green if selected).
When one of the items is selected, the background colour (red) changes. When the user clicks on an item, it is chosen and given the background colour of Green.


Question 2: What problems / warnings are there with code?
Answer:

1)There is a problem in declaration of UseState:
Before:
 const [setSelectedIndex, selectedIndex] = useState();
After fix:
const [selectedIndex, setSelectedIndex] = useState("");



2) There is a problem in calling in the code given:
Before:
items: PropTypes.array(PropTypes.shapeOf({
    	text: PropTypes.string.isRequired,
  	})),
	};
After fix:
items: PropTypes.arrayOf(
      PropTypes.shape({
      text: PropTypes.string.isRequired
      })
      ),
      };
As we can see the correct way to do deep data validation using PropTypes is by using the shape() method of PropTypes.


3) There is an error in iteration because of the null map values:
fix:
Therefore we initialized some objects in items which defines as an array of objects
WrappedListComponent.propTypes = {
  items: PropTypes.arrayOf(
    PropTypes.shape({
      text: PropTypes.string.isRequired
    })
  )
};
WrappedListComponent.defaultProps = {
  items: [
    { text: "Vaibhav Dwivedi" },
    { text: "12015229" },
    { text: "Lovely Professional University" },
    { text: "Thanks For Visiting My Github" }
  ]
};



Question 3: fixed, optimized, and modified the component

import React, { useState, useEffect, memo } from "react";

import PropTypes from "prop-types";

// Single List Item
const WrappedSingleListItem = ({ index, isSelected, onClickHandler, text }) => {
  return (
    <li
      style={{ backgroundColor: isSelected ? "green" : "red" }}
      onClick={() => onClickHandler(index)}
    >
      {text}
    </li>
  );
};

WrappedSingleListItem.propTypes = {
  index: PropTypes.number.isRequired,
  isSelected: PropTypes.bool.isRequired,
  onClickHandler: PropTypes.func.isRequired,
  text: PropTypes.string.isRequired
};

const SingleListItem = memo(WrappedSingleListItem);

// List Component
const WrappedListComponent = ({ items }) => {
  const [selectedIndex, setSelectedIndex] = useState("");

  useEffect(() => {
    setSelectedIndex("");
  }, [items]);

  const handleClick = (index) => {
    setSelectedIndex(index);
  };

  return (
    <ul style={{ textAlign: "left" }}>
      {items &&
        items.map((item, index) => (
          <SingleListItem
            key={index}
            onClickHandler={() => handleClick(index)}
            text={item.text}
            index={index}
            isSelected={index === selectedIndex}
          />
        ))}
    </ul>
  );
};

WrappedListComponent.propTypes = {
  items: PropTypes.arrayOf(
    PropTypes.shape({
      text: PropTypes.string.isRequired
    })
  )
};

WrappedListComponent.defaultProps = {
  items: [
    { text: "Vaibhav Dwivedi" },
    { text: "12015229" },
    { text: "Lovely Professional University" },
    { text: "Thanks For Visiting My Github" }
  ]
};

const List = memo(WrappedListComponent);

export default List;
